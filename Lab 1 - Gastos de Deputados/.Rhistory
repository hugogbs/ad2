library(xts)
theme_set(theme_bw())
dados <- read.csv("github-users-committing-filetypes.csv")
dados <- dados %>%
unite("data", the_year, the_month, month_day, sep = "-") %>%
mutate(data = as.Date(strptime(data, "%Y-%m-%d"))) %>%
mutate(fds = is.weekend(data)) %>%
mutate(dia_da_semana = weekdays(data)) %>%
mutate(mes = month_(data))
dados <- read.csv("github-users-committing-filetypes.csv")
dados <- dados %>%
unite("data", the_year, the_month, month_day, sep = "-") %>%
mutate(data = as.Date(strptime(data, "%Y-%m-%d"))) %>%
mutate(fds = is.weekend(data)) %>%
mutate(dia_da_semana = weekdays(data)) %>%
mutate(mes = month(data))
dados_ <- dados %>%
select(-c(file_extension, fds, dia_da_semana)) %>%
group_by(data) %>%
summarise(users_tot = sum(users)) %>%
remove_rownames %>%
column_to_rownames(var="data") %>%
as.xts()
highchart(type = "stock") %>%
hc_title(text = "Timeline da Atividade Geral do Github") %>%
hc_add_series(dados_)
monthplot(dados_)
dados.group <- dados %>%
filter(substr(data, 0,  4) == "2016") %>%
group_by(mes = substr(data, 6,  7), dia = substr(data, 9,  10)) %>%
summarize(usuarios = sum(users))
group_by(mes) %>%
summarise(usuarios.median = median(usuarios))
dados.group <- dados %>%
filter(substr(data, 0,  4) == "2016") %>%
group_by(mes = substr(data, 6,  7), dia = substr(data, 9,  10)) %>%
summarize(usuarios = sum(users))
# group_by(mes) %>%
# summarise(usuarios.median = median(usuarios))
ggplot(data = dados.group, aes(x = mes, y = usuarios.median)) +
geom_line() +
geom_point() +
dados.group2 <- dados %>%
filter(substr(data, 0,  4) == "2017") %>%
group_by(mes) %>%
summarize(mediana = median(users),
media = mean(users))
dados.group <- dados %>%
filter(substr(data, 0,  4) == "2016") %>%
group_by(mes = substr(data, 6,  7), dia = substr(data, 9,  10)) %>%
summarize(usuarios = sum(users))
# group_by(mes) %>%
# summarise(usuarios.median = median(usuarios))
ggplot(data = dados.group, aes(x = mes, y = usuarios.median)) +
geom_line() +
geom_point()
dados.group <- dados %>%
filter(substr(data, 0,  4) == "2016") %>%
group_by(mes = substr(data, 6,  7), dia = substr(data, 9,  10)) %>%
summarize(usuarios = sum(users)) %>%
group_by(mes) %>%
summarise(usuarios.median = median(usuarios))
ggplot(data = dados.group, aes(x = mes, y = usuarios.median)) +
geom_line() +
geom_point()
dados.group2 <- dados %>%
filter(substr(data, 0,  4) == "2017") %>%
group_by(mes) %>%
summarize(mediana = median(users),
media = mean(users))
ggplot(data = dados.group2, aes(x = mes, y = mediana)) +
geom_line() +
geom_point() +
scale_x_discrete()
dados.meses <- dados %>%
filter(mes %in% c(1, 12))
dados.ferias <- dados %>%
filter(!(mes %in% c(1, 12)))
dados_diff <- bootstrap2(data = dados.meses$users,
data2 = dados.ferias$users,
median,
R = 10000)
dados_diff.ci <- CI.percentile(dados_diff, probs = c(.025, .975))
dados_diff.ci
data.frame(dados_diff.ci) %>%
ggplot(aes(x = "Diferença", ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2) +
geom_hline(yintercept = 0, colour = "darkblue")
dados_mensais <- dados %>%
mon
median.md <- bootstrap2(dados_md$users,
treatment = dados_md$fds,
median,
R = 10000)
median.md <- bootstrap2(dados_md$users,
treatment = dados_md$fds,
median,
R = 10000)
dados_m <- dados %>%
select(-c(file_extension, dia_da_semana)) %>%
remove_rownames %>%
column_to_rownames(var="data") %>%
as.xts()
View(dados)
dados <- dados %>%
unite("data", the_year, the_month, month_day, sep = "-") %>%
mutate(data = as.Date(strptime(data, "%Y-%m-%d"))) %>%
mutate(fds = is.weekend(data)) %>%
mutate(dia_da_semana = weekdays(data)) %>%
mutate(mes = month(data)) %>%
mutate(is_segsex = dia_da_semana %in% c("segunda", "sexta"))
dados <- read.csv("github-users-committing-filetypes.csv")
dados <- dados %>%
unite("data", the_year, the_month, month_day, sep = "-") %>%
mutate(data = as.Date(strptime(data, "%Y-%m-%d"))) %>%
mutate(fds = is.weekend(data)) %>%
mutate(dia_da_semana = weekdays(data)) %>%
mutate(mes = month(data)) %>%
mutate(is_segsex = dia_da_semana %in% c("segunda", "sexta"))
mSS <- bootstrap2(dados$users,
treatment = dados$is_segsex,
median,
R = 10000)
mSS.CI <- CI.percentile(mSS, probs = c(.025, .975))
data.frame(mSS.CI) %>%
ggplot(aes(x = "Diferença", ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2) +
geom_hline(yintercept = 0, colour = "darkblue")
mSS.CI
View(dados.group)
dados.ss = bootstrap(dados %>%
filter(is_segsex), median(users))
dados.ss = bootstrap(dados %>%
filter(is_segsex), median(users))
ss.CI = CI.bca(b, probs = c(.025, .975))
ss.CI = CI.bca(dados.ss, probs = c(.025, .975))
ss.CI = CI.bca(dados.ss, probs = c(.025, .975))
ss.CI
dados.Nss = bootstrap(dados %>%
filter(!is_segsex), median(users))
Nss.CI = CI.bca(dados.Nss, probs = c(.025, .975))
Nss.CI
df <- data.frame(rbind(ss.CI,
Nss.CI))
df$medida = row.names(df)
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
dados.ss = bootstrap(dados %>%
filter(is_segsex), median(users))
ss.CI = CI.bca(dados.ss, probs = c(.025, .975))
ss.CI
dados.Nss = bootstrap(dados %>%
filter(!is_segsex), median(users))
Nss.CI = CI.bca(dados.Nss, probs = c(.025, .975))
Nss.CI
df <- data.frame(rbind(ss.CI,
Nss.CI))
df$medida = row.names(df)
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
mSS <- bootstrap2(dados$users,
treatment = dados$is_segsex,
median,
R = 10000)
mSS.CI <- CI.percentile(mSS, probs = c(.025, .975))
data.frame(mSS.CI) %>%
ggplot(aes(x = "Diferença", ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2) +
geom_hline(yintercept = 0, colour = "darkblue")
median.md <- bootstrap2(dados_md$users,
treatment = dados_md$fds,
median,
R = 10000)
dados.ss = bootstrap(dados %>%
filter(is_segsex), median(users))
ss.CI = CI.bca(dados.ss, probs = c(.025, .975))
ss.CI
dados.Nss = bootstrap(dados %>%
filter(!is_segsex), median(users))
Nss.CI = CI.bca(dados.Nss, probs = c(.025, .975))
Nss.CI
df <- data.frame(rbind(ss.CI,
Nss.CI))
df$medida = row.names(df)
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
mSS <- bootstrap2(dados$users,
treatment = dados$is_segsex,
median,
R = 10000)
mSS.CI <- CI.percentile(mSS, probs = c(.025, .975))
data.frame(mSS.CI) %>%
ggplot(aes(x = "Diferença", ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2) +
geom_hline(yintercept = 0, colour = "darkblue")
ggplot(data = dados, aes(x = algoritmo, y = tempo)) +
geom_boxplot()
library(tidyverse)
ggplot(data = dados, aes(x = algoritmo, y = tempo)) +
geom_boxplot()
library(highcharter)
icons <- c("male", "female")
n <- c(3, 8)
hciconarray(icons, n, icons = icons, size = 5)
hciconarray(icons, n, icons = icons, size = 10)
icons <- c("nice", "good")
n <- c(3, 8)
hciconarray(icons, n, icons = icons, size = 10)
hciconarray(icons, n, icons = "child", size = 10)
hciconarray(icons, n, icons = "man", size = 10)
hciconarray(icons, n, icons = "male", size = 10)
hciconarray(icons, n, icons = "dog", size = 10)
hciconarray(icons, n, icons = "plane", size = 10)
hciconarray(icons, n, size = 10)
hciconarray(icons, n, icons = "car", size = 10)
hciconarray(icons, n, icons = "diamond", size = 10)
hciconarray(icons, n, icons = "afro", size = 10)
faicos$name
fa_icon()
?hciconarray
hciconarray(icons, n, icons = c("male", "female"), size = 10)
n <- c(7, 3)
hciconarray(icons, n, icons = c("male", "female"), size = 10)
library(tidyverse)
library(plotly)
setwd("~/Documentos/ad2/Lab 1 - Gastos de Deputados")
load("~/Documentos/ad2/Lab 1 - Gastos de Deputados/.RData")
ceap %>%
group_by(tipoDespesa) %>%
summarise(n = n()) %>%
plot_ly(y=~reorder(tipoDespesa, n), x=~n) %>%
layout(margin = list(l = 500),
yaxis = list(title = ""))
ceap %>%
group_by(tipoDespesa) %>%
summarise(total = sum(valorLíquido)) %>%
plot_ly(x=~total, y=~reorder(tipoDespesa, total), type="bar") %>%
layout(margin = list(l = 500),
yaxis = list(title = ""))
ceap %>%
group_by(tipoDespesa) %>%
summarise(n = n()) %>%
plot_ly(y=~reorder(tipoDespesa, n), x=~n) %>%
layout(margin = list(l = 500),
yaxis = list(title = ""))
wordcloud(tipo_count$tipoDespesa, tipo_count$n)
library(wordcloud)
wordcloud(tipo_count$tipoDespesa, tipo_count$n)
ceap %>%
group_by(tipoDespesa) %>%
summarise(total = sum(valorLíquido)) %>%
plot_ly(x=~total, y=~reorder(tipoDespesa, total), type="bar") %>%
layout(margin = list(l = 500),
yaxis = list(title = ""))
library(rgdal)
shp <- readOGR("mapa\\.", "BRUFE250GC_SIR", stringsAsFactors=FALSE, encoding="UTF-8")
mapa <- readOGR("mapa/BRUFE250GC_SIR.shp")
dados_mapa <- mapa@data
View(dados_mapa)
ceap_estado <- ceap %>%
group_by(sgUF) %>%
summarise(valor_gasto = sum(valorLíquido),
n_gastos = n())
View(ceap_estado)
mapa2 <- readOGR("Brasil/UFEBRASIL.shp")
dados_mapa2 <- mapa2@data
View(dados_mapa2)
View(ceap_estado)
mapa@data$sgUF <- c("AC", "AL", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PE", "PI", "RJ", "RN", "RS", "RR", "SC", "SP", "SE", "TO", "PR", "RO", "AM")
dados_mapa <- mapa@data
mapa@data$sgUF <- c("AC", "AL", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PE", "PI", "RJ", "RN", "RS", "RR", "SC", "SP", "SE", "TO", "PR", "RO", "AM")
dados_mapa <- mapa@data
mapa@data <- mapa@data %>%
left_join(ceap_estado)
dados_mapa <- mapa@data
library(leaflet)
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$valor_gasto),
fillOpacity = 1)
colors = colorFactor('OrRd', mapa_paraiba@data$Y)
colors = colorFactor('OrRd', mapa@data$valor_gasto)
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$valor_gasto),
fillOpacity = 1)
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$valor_gasto),
fillOpacity = 1) %>%
addLegend(position = "bottomright", pal = colors, values = mapa@data$valor_gasto,
title = "CEAP por estado",
opacity = 1, na.label = "0")
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$valor_gasto),
fillOpacity = 1,
label = paste(mapa@data$NM_ESTADO))
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$valor_gasto),
fillOpacity = 1,
label = paste(mapa@data$NM_ESTADO),
popup = paste(mapa@data$NM_ESTADO, "</br>",
"Valor gasto:", mapa@data$valor_gasto))
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$valor_gasto),
fillOpacity = 1,
color = "black",
label = paste(mapa@data$NM_ESTADO),
popup = paste(mapa@data$NM_ESTADO, "</br>",
"Valor gasto: R$", mapa@data$valor_gasto))
colors = colorQuantile('OrRd', mapa@data$valor_gasto)
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$valor_gasto),
fillOpacity = 1,
color = "black",
label = paste(mapa@data$NM_ESTADO),
popup = paste(mapa@data$NM_ESTADO, "</br>",
"Valor gasto: R$", mapa@data$valor_gasto))
colors = colorQuantile('OrRd', mapa@data$valor_gasto, n = 5)
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$valor_gasto),
fillOpacity = 1,
color = "black",
label = paste(mapa@data$NM_ESTADO),
popup = paste(mapa@data$NM_ESTADO, "</br>",
"Valor gasto: R$", mapa@data$valor_gasto))
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$valor_gasto),
fillOpacity = 1,
color = "black",
label = paste(mapa@data$NM_ESTADO),
popup = paste(mapa@data$NM_ESTADO, "</br>",
"Valor gasto: R$", mapa@data$valor_gasto)) %>%
addLegend(position = "bottomright", pal = colors, values = mapa@data$valor_gasto,
title = "CEAP por estado",
opacity = 1, na.label = "0")
?addLegend
colors = colorNumeric('OrRd', mapa@data$valor_gasto, n = 5)
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$valor_gasto),
fillOpacity = 1,
color = "black",
label = paste(mapa@data$NM_ESTADO),
popup = paste(mapa@data$NM_ESTADO, "</br>",
"Valor gasto: R$", mapa@data$valor_gasto)) %>%
addLegend(position = "bottomright", pal = colors, values = mapa@data$valor_gasto,
title = "CEAP por estado",
opacity = 1, na.label = "0")
colors = colorNumeric('OrRd', mapa@data$valor_gasto)
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$valor_gasto),
fillOpacity = 1,
color = "black",
label = paste(mapa@data$NM_ESTADO),
popup = paste(mapa@data$NM_ESTADO, "</br>",
"Valor gasto: R$", mapa@data$valor_gasto)) %>%
addLegend(position = "bottomright", pal = colors, values = mapa@data$valor_gasto,
title = "CEAP por estado",
opacity = 1, na.label = "0")
colors = colorNumeric('OrRd', mapa@data$n_gastos)
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$n_gastos),
fillOpacity = 1,
color = "black",
label = paste(mapa@data$NM_ESTADO),
popup = paste(mapa@data$NM_ESTADO, "</br>",
"Número de usos da cota: ", mapa@data$n_gastos)) %>%
addLegend(position = "bottomright", pal = colors, values = mapa@data$n_gastos,
title = "CEAP por estado",
opacity = 1, na.label = "0")
parlamentar_rs <- ceap %>%
group_by(nomeParlamentar) %>%
summarise(total = sum(valorLíquido))
parlamentar_rs %>%
plot_ly(x = ~nomeParlamentar, y = ~total, type="scatter", mode="markers")
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(x = ~nomeParlamentar, y = ~total, type="scatter", mode="markers")
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers")
parlamentar_rs %>%
filter(total <= quantile(total, 0.05)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers")
parlamentar_rs <- ceap %>%
group_by(nomeParlamentar) %>%
summarise(total = sum(valorLíquido)) %>%
filter(total > 0)
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers")
parlamentar_rs <- ceap %>%
group_by(sgPartido, nomeParlamentar) %>%
summarise(total = sum(valorLíquido)) %>%
filter(total > 0)
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers")
parlamentar_rs <- ceap %>%
group_by(nomeParlamentar, sgPartido) %>%
summarise(total = sum(valorLíquido)) %>%
filter(total > 0)
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers")
parlamentar_rs <- ceap %>%
group_by(nomeParlamentar) %>%
summarise(total = sum(valorLíquido)) %>%
filter(total > 0) %>%
left_join(ceap %>%
select(nomeParlamentar, sgPartido))
parlamentar_rs <- ceap %>%
group_by(nomeParlamentar) %>%
summarise(total = sum(valorLíquido)) %>%
filter(total > 0)
parlamentar_rs <- ceap %>%
group_by(nomeParlamentar) %>%
summarise(total = sum(valorLíquido)) %>%
filter(total > 0) %>%
inner_join(ceap %>%
select(nomeParlamentar, sgPartido))
parlamentar_rs <- ceap %>%
group_by(nomeParlamentar) %>%
summarise(total = sum(valorLíquido)) %>%
filter(total > 0)
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers")
parlamentar_rs %>%
filter(total <= quantile(total, 0.05)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers")
colors = colorNumeric('OrRd', mapa@data$valor_gasto)
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$valor_gasto),
fillOpacity = 1,
color = "black",
label = paste(mapa@data$NM_ESTADO),
popup = paste(mapa@data$NM_ESTADO, "</br>",
"Valor gasto: R$", mapa@data$valor_gasto)) %>%
addLegend(position = "bottomright", pal = colors, values = mapa@data$valor_gasto,
title = "CEAP por estado - Valor gasto (R$)",
opacity = 1, na.label = "0")
colors = colorNumeric('OrRd', mapa@data$n_gastos)
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$n_gastos),
fillOpacity = 1,
color = "black",
label = paste(mapa@data$NM_ESTADO),
popup = paste(mapa@data$NM_ESTADO, "</br>",
"Número de usos da cota: ", mapa@data$n_gastos)) %>%
addLegend(position = "bottomright", pal = colors, values = mapa@data$n_gastos,
title = "CEAP por estado - Frequência",
opacity = 1, na.label = "0")
function (file, header = TRUE, sep = ",", quote = "\"", dec = ".",
fill = TRUE, comment.char = "", ...)
ceap <- read.csv("https://drive.google.com/file/d/0B9MeEXft7J4zSkZiQVJTTmRyc1E/view?usp=sharing")
