value = "valor",
f, speak_ratio, female_speak, year, m, male_speak) # = move para long todas as
# variávies menos repository_language
# e .cluster
filmes.scaled.km.long %>%
ggplot(aes(x = `variável`, y = valor, group = title, colour = .cluster)) +
#geom_point(alpha = 0.2) +
geom_line(alpha = .5) +
facet_wrap(~ .cluster, ncol = 2)
plot(silhouette(km$cluster, dists), col = colors, border = NA, main = 'Silhueta dos grupos usando o K-means')
console.log(allocationsList.push({i : newList}));
devtools::install_github("brendan-r/brocks")
install.packages('devtools')
install.packages("devtools")
devtools::install_github("brendan-r/brocks")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, fig.align="center")
library(tidyverse)
library(resample)
library(GGally)
library(knitr)
library(lubridate)
library(chron)
library(highcharter)
library(xts)
theme_set(theme_bw())
dados <- read.csv("github-users-committing-filetypes.csv")
dados <- dados %>%
unite("data", the_year, the_month, month_day, sep = "-") %>%
mutate(data = as.Date(strptime(data, "%Y-%m-%d"))) %>%
mutate(fds = is.weekend(data)) %>%
mutate(dia_da_semana = weekdays(data)) %>%
mutate(mes = month_(data))
dados <- read.csv("github-users-committing-filetypes.csv")
dados <- dados %>%
unite("data", the_year, the_month, month_day, sep = "-") %>%
mutate(data = as.Date(strptime(data, "%Y-%m-%d"))) %>%
mutate(fds = is.weekend(data)) %>%
mutate(dia_da_semana = weekdays(data)) %>%
mutate(mes = month(data))
dados_ <- dados %>%
select(-c(file_extension, fds, dia_da_semana)) %>%
group_by(data) %>%
summarise(users_tot = sum(users)) %>%
remove_rownames %>%
column_to_rownames(var="data") %>%
as.xts()
highchart(type = "stock") %>%
hc_title(text = "Timeline da Atividade Geral do Github") %>%
hc_add_series(dados_)
monthplot(dados_)
dados.group <- dados %>%
filter(substr(data, 0,  4) == "2016") %>%
group_by(mes = substr(data, 6,  7), dia = substr(data, 9,  10)) %>%
summarize(usuarios = sum(users))
group_by(mes) %>%
summarise(usuarios.median = median(usuarios))
dados.group <- dados %>%
filter(substr(data, 0,  4) == "2016") %>%
group_by(mes = substr(data, 6,  7), dia = substr(data, 9,  10)) %>%
summarize(usuarios = sum(users))
# group_by(mes) %>%
# summarise(usuarios.median = median(usuarios))
ggplot(data = dados.group, aes(x = mes, y = usuarios.median)) +
geom_line() +
geom_point() +
dados.group2 <- dados %>%
filter(substr(data, 0,  4) == "2017") %>%
group_by(mes) %>%
summarize(mediana = median(users),
media = mean(users))
dados.group <- dados %>%
filter(substr(data, 0,  4) == "2016") %>%
group_by(mes = substr(data, 6,  7), dia = substr(data, 9,  10)) %>%
summarize(usuarios = sum(users))
# group_by(mes) %>%
# summarise(usuarios.median = median(usuarios))
ggplot(data = dados.group, aes(x = mes, y = usuarios.median)) +
geom_line() +
geom_point()
dados.group <- dados %>%
filter(substr(data, 0,  4) == "2016") %>%
group_by(mes = substr(data, 6,  7), dia = substr(data, 9,  10)) %>%
summarize(usuarios = sum(users)) %>%
group_by(mes) %>%
summarise(usuarios.median = median(usuarios))
ggplot(data = dados.group, aes(x = mes, y = usuarios.median)) +
geom_line() +
geom_point()
dados.group2 <- dados %>%
filter(substr(data, 0,  4) == "2017") %>%
group_by(mes) %>%
summarize(mediana = median(users),
media = mean(users))
ggplot(data = dados.group2, aes(x = mes, y = mediana)) +
geom_line() +
geom_point() +
scale_x_discrete()
dados.meses <- dados %>%
filter(mes %in% c(1, 12))
dados.ferias <- dados %>%
filter(!(mes %in% c(1, 12)))
dados_diff <- bootstrap2(data = dados.meses$users,
data2 = dados.ferias$users,
median,
R = 10000)
dados_diff.ci <- CI.percentile(dados_diff, probs = c(.025, .975))
dados_diff.ci
data.frame(dados_diff.ci) %>%
ggplot(aes(x = "Diferença", ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2) +
geom_hline(yintercept = 0, colour = "darkblue")
dados_mensais <- dados %>%
mon
median.md <- bootstrap2(dados_md$users,
treatment = dados_md$fds,
median,
R = 10000)
median.md <- bootstrap2(dados_md$users,
treatment = dados_md$fds,
median,
R = 10000)
dados_m <- dados %>%
select(-c(file_extension, dia_da_semana)) %>%
remove_rownames %>%
column_to_rownames(var="data") %>%
as.xts()
View(dados)
dados <- dados %>%
unite("data", the_year, the_month, month_day, sep = "-") %>%
mutate(data = as.Date(strptime(data, "%Y-%m-%d"))) %>%
mutate(fds = is.weekend(data)) %>%
mutate(dia_da_semana = weekdays(data)) %>%
mutate(mes = month(data)) %>%
mutate(is_segsex = dia_da_semana %in% c("segunda", "sexta"))
dados <- read.csv("github-users-committing-filetypes.csv")
dados <- dados %>%
unite("data", the_year, the_month, month_day, sep = "-") %>%
mutate(data = as.Date(strptime(data, "%Y-%m-%d"))) %>%
mutate(fds = is.weekend(data)) %>%
mutate(dia_da_semana = weekdays(data)) %>%
mutate(mes = month(data)) %>%
mutate(is_segsex = dia_da_semana %in% c("segunda", "sexta"))
mSS <- bootstrap2(dados$users,
treatment = dados$is_segsex,
median,
R = 10000)
mSS.CI <- CI.percentile(mSS, probs = c(.025, .975))
data.frame(mSS.CI) %>%
ggplot(aes(x = "Diferença", ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2) +
geom_hline(yintercept = 0, colour = "darkblue")
mSS.CI
View(dados.group)
dados.ss = bootstrap(dados %>%
filter(is_segsex), median(users))
dados.ss = bootstrap(dados %>%
filter(is_segsex), median(users))
ss.CI = CI.bca(b, probs = c(.025, .975))
ss.CI = CI.bca(dados.ss, probs = c(.025, .975))
ss.CI = CI.bca(dados.ss, probs = c(.025, .975))
ss.CI
dados.Nss = bootstrap(dados %>%
filter(!is_segsex), median(users))
Nss.CI = CI.bca(dados.Nss, probs = c(.025, .975))
Nss.CI
df <- data.frame(rbind(ss.CI,
Nss.CI))
df$medida = row.names(df)
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
dados.ss = bootstrap(dados %>%
filter(is_segsex), median(users))
ss.CI = CI.bca(dados.ss, probs = c(.025, .975))
ss.CI
dados.Nss = bootstrap(dados %>%
filter(!is_segsex), median(users))
Nss.CI = CI.bca(dados.Nss, probs = c(.025, .975))
Nss.CI
df <- data.frame(rbind(ss.CI,
Nss.CI))
df$medida = row.names(df)
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
mSS <- bootstrap2(dados$users,
treatment = dados$is_segsex,
median,
R = 10000)
mSS.CI <- CI.percentile(mSS, probs = c(.025, .975))
data.frame(mSS.CI) %>%
ggplot(aes(x = "Diferença", ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2) +
geom_hline(yintercept = 0, colour = "darkblue")
median.md <- bootstrap2(dados_md$users,
treatment = dados_md$fds,
median,
R = 10000)
dados.ss = bootstrap(dados %>%
filter(is_segsex), median(users))
ss.CI = CI.bca(dados.ss, probs = c(.025, .975))
ss.CI
dados.Nss = bootstrap(dados %>%
filter(!is_segsex), median(users))
Nss.CI = CI.bca(dados.Nss, probs = c(.025, .975))
Nss.CI
df <- data.frame(rbind(ss.CI,
Nss.CI))
df$medida = row.names(df)
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
mSS <- bootstrap2(dados$users,
treatment = dados$is_segsex,
median,
R = 10000)
mSS.CI <- CI.percentile(mSS, probs = c(.025, .975))
data.frame(mSS.CI) %>%
ggplot(aes(x = "Diferença", ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2) +
geom_hline(yintercept = 0, colour = "darkblue")
ggplot(data = dados, aes(x = algoritmo, y = tempo)) +
geom_boxplot()
library(tidyverse)
ggplot(data = dados, aes(x = algoritmo, y = tempo)) +
geom_boxplot()
library(highcharter)
icons <- c("male", "female")
n <- c(3, 8)
hciconarray(icons, n, icons = icons, size = 5)
hciconarray(icons, n, icons = icons, size = 10)
icons <- c("nice", "good")
n <- c(3, 8)
hciconarray(icons, n, icons = icons, size = 10)
hciconarray(icons, n, icons = "child", size = 10)
hciconarray(icons, n, icons = "man", size = 10)
hciconarray(icons, n, icons = "male", size = 10)
hciconarray(icons, n, icons = "dog", size = 10)
hciconarray(icons, n, icons = "plane", size = 10)
hciconarray(icons, n, size = 10)
hciconarray(icons, n, icons = "car", size = 10)
hciconarray(icons, n, icons = "diamond", size = 10)
hciconarray(icons, n, icons = "afro", size = 10)
faicos$name
fa_icon()
?hciconarray
hciconarray(icons, n, icons = c("male", "female"), size = 10)
n <- c(7, 3)
hciconarray(icons, n, icons = c("male", "female"), size = 10)
setwd("~/Documentos/ad2/Lab 1 - Gastos de Deputados")
load("~/Documentos/ad2/Lab 1 - Gastos de Deputados/.RData")
colors = colorNumeric('OrRd', mapa@data$n_gastos)
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$n_gastos),
fillOpacity = 1,
color = "black",
label = paste(mapa@data$NM_ESTADO),
popup = paste(mapa@data$NM_ESTADO, "</br>",
"Número de usos da cota: ", mapa@data$n_gastos)) %>%
addLegend(position = "bottomright", pal = colors, values = mapa@data$n_gastos,
title = "CEAP por estado - Frequência",
opacity = 1, na.label = "0")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
library(tidyverse)
library(plotly)
library(wordcloud)
library(rgdal)
library(leaflet)
library(RColorBrewer)
colors = colorNumeric('OrRd', mapa@data$n_gastos)
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$n_gastos),
fillOpacity = 1,
color = "black",
label = paste(mapa@data$NM_ESTADO),
popup = paste(mapa@data$NM_ESTADO, "</br>",
"Número de usos da cota: ", mapa@data$n_gastos)) %>%
addLegend(position = "bottomright", pal = colors, values = mapa@data$n_gastos,
title = "CEAP por estado - Frequência",
opacity = 1, na.label = "0")
colors = colorNumeric('OrRd', mapa@data$valor_gasto)
mapa %>%
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(opacity = 0.5,
weight = 1,
fillColor = colors(mapa@data$valor_gasto),
fillOpacity = 1,
color = "black",
label = paste(mapa@data$NM_ESTADO),
popup = paste(mapa@data$NM_ESTADO, "</br>",
"Valor gasto: R$", mapa@data$valor_gasto)) %>%
addLegend(position = "bottomright", pal = colors, values = mapa@data$valor_gasto,
title = "CEAP por estado - Valor gasto (R$)",
opacity = 1, na.label = "0")
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers")
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers")
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers") %>%
layout(margin = list(b = 500),
yaxis = list(title = ""))
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers") %>%
layout(margin = list(b = 200),
yaxis = list(title = ""))
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers") %>%
layout(margin = list(b = 200),
xaxis = list(title = ""))
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers") %>%
layout(margin = list(b = 100),
xaxis = list(title = ""))
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers") %>%
layout(margin = list(b = 150),
xaxis = list(title = ""))
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total)
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total/10)
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total, random.order = FALSE)
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total)
View(parlamentar_rs)
gastadores <- parlamentar_rs %>%
filter(total >= quantile(total, 0.95))
wordcloud(gastadores$nomeParlamentar, gastadores$total)
wordcloud(gastadores$nomeParlamentar, gastadores$total, max.words=50,colors=c("blue","red"))
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total, max.words=100,colors=c("blue","red"))
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total, max.words=100)
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total)
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total, colors=brewer.pal(8, “Dark2”))
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total, colors=brewer.pal(8, "Dark2"))
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total, colors=brewer.pal(8, "Reds"))
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total, colors=brewer.pal(8, "Dark2"))
wordcloud(parlamentar_rs$nomeParlamentar, sqrt(parlamentar_rs$total), colors=brewer.pal(8, "Dark2"))
wordcloud(parlamentar_rs$nomeParlamentar, sqrt(sqrt(parlamentar_rs$total)), colors=brewer.pal(8, "Dark2"))
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total**5, colors=brewer.pal(8, "Dark2"))
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total**-5, colors=brewer.pal(8, "Dark2"))
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total, colors=brewer.pal(8, "Dark2"), vfont=c("sans serif","plain"))
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total/1000, colors=brewer.pal(8, "Dark2"), vfont=c("sans serif","plain"))
wordcloud(parlamentar_rs$nomeParlamentar, log10(parlamentar_rs$total), colors=brewer.pal(8, "Dark2"), vfont=c("sans serif","plain"))
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total, colors=brewer.pal(8, "Dark2"), vfont=c("sans serif","plain"), res=300)
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total, colors=brewer.pal(8, "Dark2"), vfont=c("sans serif","plain"), res=300, width=12,height=8, units='in')
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total, colors=brewer.pal(8, "Dark2"), vfont=c("sans serif","plain"), res=300, width=12,height=8)
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total, colors=brewer.pal(8, "Greys"), vfont=c("sans serif","plain"), res=300, width=12,height=8)
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total/10000, colors=brewer.pal(5, "Dark2"), vfont=c("sans serif","plain"), res=300, width=12,height=8)
parlamentar_rs <- ceap %>%
group_by(nomeParlamentar) %>%
summarise(total = sum(valorLíquido)) %>%
filter(total > 1) %>%
filter(total >= quantile(total, 0.95)) %>%
mutate(total_log = log10(total))
View(parlamentar_rs)
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total_log)
wordcloud(parlamentar_rs$nomeParlamentar, parlamentar_rs$total_log, colors=brewer.pal(5, "Dark2"), vfont=c("sans serif","plain"), res=300, width=12,height=8)
parlamentar_rs <- ceap %>%
group_by(nomeParlamentar) %>%
summarise(total = sum(valorLíquido)) %>%
filter(total > 1)
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers") %>%
layout(margin = list(b = 150),
xaxis = list(title = ""))
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(b = 150),
xaxis = list(title = ""))
parlamentar_rs %>%
filter(total >= quantile(total, 0.95)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(l = 150),
xaxis = list(title = ""))
parlamentar_rs %>%
filter(total >= quantile(total, 0.99)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(l = 150),
xaxis = list(title = ""))
parlamentar_rs %>%
filter(total <= quantile(total, 0.01)) %>%
plot_ly(x = ~reorder(nomeParlamentar, total), y = ~total, type="scatter", mode="markers")
parlamentar_rs %>%
filter(total <= quantile(total, 0.01)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(l = 150),
xaxis = list(title = ""))
parlamentar_rs %>%
filter(total <= quantile(total, 0.01)) %>%
plot_ly(y = ~reorder(nomeParlamentar, desc(total)), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(l = 150),
xaxis = list(title = ""))
parlamentar_rs %>%
filter(total <= quantile(total, 0.01)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(l = 150),
xaxis = list(title = ""))
parlamentar_rs %>%
plot_ly(y = ~total, type = "box", boxpoints = "all", jitter = 0.3, pointpos = 0)
parlamentar_rs %>%
filter(total >= quantile(total, 0.99)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(l = 150),
xaxis = list(title = ""))
parlamentar_rs <- ceap %>%
group_by(nomeParlamentar) %>%
summarise(total = sum(valorLíquido)) %>%
filter(total > 1)
parlamentar_rs %>%
filter(total >= quantile(total, 0.99)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(l = 150),
xaxis = list(title = ""))
parlamentar_rs %>%
filter(total <= quantile(total, 0.01)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(l = 150),
xaxis = list(title = ""))
parlamentar_rs %>%
filter(total >= quantile(total, 0.99)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(l = 150),
yxaxis = list(title = ""))
parlamentar_rs %>%
filter(total >= quantile(total, 0.99)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(l = 150),
yxaxis = list(title = ""))
parlamentar_rs %>%
filter(total <= quantile(total, 0.01)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(l = 150),
yaxis = list(title = ""))
parlamentar_rs %>%
filter(total >= quantile(total, 0.99)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(l = 150),
yxaxis = list(title = ""))
parlamentar_rs %>%
filter(total >= quantile(total, 0.99)) %>%
plot_ly(y = ~reorder(nomeParlamentar, total), x = ~total, type="scatter", mode="markers") %>%
layout(margin = list(l = 150),
yaxis = list(title = ""))
gastos_exterior <- ceap %>%
filter(tipoDocumento == 2)
gastos_exterior %>%
group_by(nomeParlamentar) %>%
summarise(n= n(),
total = sum(valorLíquido)) %>%
plot_ly(x=~n, y = ~total, type ="scatter", mode = "markers")
gastos_exterior <- ceap %>%
filter(tipoDocumento %in% c(0, 1, 2)) %>%
mutate(doc = ifelse(tipoDocumento == 2, 2, 1)) %>%
group_by(nomeParlamentar, tipoDocumento) %>%
summarise(valor = sum(valorLíquido))
View(gastos_exterior)
gastos_exterior <- ceap %>%
filter(tipoDocumento %in% c(0, 1, 2)) %>%
mutate(doc = ifelse(tipoDocumento == 2, 2, 1))
g <- ceap %>%
filter(tipoDocumento %in% c(0, 1, 2)) %>%
mutate(doc = ifelse(tipoDocumento == 2, 2, 1)) %>%
group_by(nomeParlamentar, tipoDocumento) %>%
summarise(valor = sum(valorLíquido))
g <- ceap %>%
filter(tipoDocumento %in% c(0, 1, 2)) %>%
mutate(doc = ifelse(tipoDocumento == 2, 2, 1))
g1 <- g %>%
filter(doc = 1) %>%
group_by(nomeParlamentar) %>%
summarise(total_br = sum(valorLíquido)) %>%
inner_join( g %>%
filter(doc = 2) %>%
group_by(nomeParlamentar) %>%
summarise(total_ex = sum(valorLíquido))
)
g1 <- g %>%
filter(doc == 1) %>%
group_by(nomeParlamentar) %>%
summarise(total_br = sum(valorLíquido)) %>%
inner_join( g %>%
filter(doc == 2) %>%
group_by(nomeParlamentar) %>%
summarise(total_ex = sum(valorLíquido))
)
View(g1)
g1 %>%
plot_ly(x=~total_br, y = ~total_ex, type ="scatter", mode = "markers")
g1 %>%
plot_ly(x=~reorder(total_br, total_br), y = ~total_ex, type ="scatter", mode = "markers")
g1 %>%
plot_ly(x=total_br, y = ~total_ex, type ="scatter", mode = "markers")
g1 %>%
plot_ly(x=~total_br, y = ~total_ex, type ="scatter", mode = "markers")
install.packages("knitr")
install.packages("knitr")
