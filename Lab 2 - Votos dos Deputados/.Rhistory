install.packages("ggplot2")
install.packages("ggplot2")
install.packages("~/Downloads/stringr_1.2.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/reshape2_1.4.2.tar.gz", repos = NULL, type = "source")
library(ggplot2)
library(ggplot2)
library(dplyr)
library(tidyr)
library(readr)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
screenshot.force = FALSE,
fig.cap = '',
fig.align = 'center')
library(ggplot2)
library(dplyr)
library(tidyr)
library(readr)
library(plotly)
install.packages("plotly")
library(plotly)
theme_set(theme_minimal())
series <- read_csv("series_from_imdb.csv")
View(series)
unique(series$series_name)
shiny::runApp('teste')
library(streamgraph)
install.packages("streamgraph")
devtools::install_github("hrbrmstr/streamgraph")
runApp('teste')
faithful
summary(faithful)
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
faithful
View(faithful)
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
?renderPlot
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
runApp('Documentos/AD1/LAB2/Séries')
devtools::install_github('hadley/ggplot2')
runApp('Documentos/AD1/LAB2/Séries')
devtools::install_github("brendan-r/brocks")
install.packages("devtools")
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(plotly)
ceap <- read.csv("dadosCEAP.csv")
ceap$valorGlosa <- as.numeric(sub(",", ".", ceap$valorGlosa, fixed = TRUE))
partidos <- ceap %>%
group_by(sgPartido) %>%
summarise(n = n())
partidos <- partidos[order(partidos$n), ]
partidos %>%
plot_ly(x=~sgPartido, y=~n, type = "bar") %>%
layout(title = "Uso da CEAP por partido",
xaxis = list(title = "Partido"),
yaxis = list(title = "Número de usos da cota"))
p <- partidos %>%
filter(!is.na(sgPartido)) %>%
ggplot(aes(x = reorder(sgPartido, n), y = n)) +
geom_bar(stat="identity", fill = "blue") +
coord_flip()
p
install.packages("leaflet")
partidos <- ceap %>%
group_by(sgPartido) %>%
summarise(n = n())
partidos <- partidos[order(partidos$n), ]
partidos %>%
plot_ly(x=~sgPartido, y=~n, type = "bar") %>%
layout(title = "Uso da CEAP por partido",
xaxis = list(title = "Partido"),
yaxis = list(title = "Número de usos da cota"))
p <- partidos %>%
filter(!is.na(sgPartido)) %>%
ggplot(aes(x = reorder(sgPartido, n), y = n)) +
geom_bar(stat="identity", fill = "blue") +
coord_flip()
p
partidos_rs <- ceap %>%
group_by(sgPartido) %>%
summarise(total = sum(valorLíquido))
partidos_rs %>%
plot_ly(x=~sgPartido, y=~total, type="bar") %>%
layout(title = "Uso da CEAP por partido",
xaxis = list(title = "Partido"),
yaxis = list(title = "Valor (em R$) gastos na cota"))
ceap %>%
plot_ly(y=~tipoDespesa, type="histogram")
ceap %>%
plot_ly(x=~sgUF, type="histogram")
ceap_estado <- ceap %>%
group_by(sgUF) %>%
summarise(valor_gasto = sum(valorLíquido),
n_gastos = n())
estado_rs <- ceap %>%
group_by(sgUF) %>%
summarise(total = sum(valorLíquido))
estado_rs %>%
plot_ly(x=~sgUF, y=~total, type = "bar")
parlamentar_rs <- ceap %>%
group_by(nomeParlamentar) %>%
summarise(total = sum(valorLíquido))
parlamentar_rs %>%
plot_ly(x = ~nomeParlamentar, y = ~total, type="scatter", mode="markers")
parlamentar_rs %>%
plot_ly(y = ~total, type = "box", boxpoints = "all", jitter = 0.3, pointpos = 0)
mais_gastam <- parlamentar_rs %>%
filter(total >= quantile(total, .75))
menos_gastam <- parlamentar_rs %>%
filter(total <= quantile(total, .25))
mais_gastam %>%
plot_ly(x = ~nomeParlamentar, y = ~total, type="scatter", mode="markers")
menos_gastam %>%
plot_ly(x = ~nomeParlamentar, y = ~total, type="scatter", mode="markers")
gastos_exterior <- ceap %>%
filter(tipoDocumento == 2)
gastos_exterior %>%
group_by(nomeParlamentar) %>%
summarise(n= n(),
total = sum(valorLíquido)) %>%
plot_ly(x=~n, y = ~total, type ="scatter", mode = "markers")
library(leaflet)
library(rgdal)
install.packages("rgdal")
install.packages("rgeos")
install.packages('rgeos', type="source")
install.packages('rgdal', type="source")
library(rgdal)
library(rgdal)
install.packages("rgeos")
install.packages("rgdal")
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(plotly)
library(leaflet)
g <- list(
scope = 'bra',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(ceap_estado, locationmode = 'BRA-states') %>%
add_trace(
z = ~n_gastos, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
)
p
p <- plot_geo(ceap_estado, locationmode = 'BRA-states') %>%
add_trace(
z = ~n_gastos, locations = ~code,
color = ~total.exports, colors = 'Purples'
)
p
p <- plot_geo(ceap_estado, locationmode = 'BRA-states') %>%
add_trace(
z = ~n_gastos, locations = ~sgUF,
color = ~total.exports, colors = 'Purples'
)
p
p <- plot_geo(ceap_estado, locationmode = 'BRA-states') %>%
add_trace(
z = ~n_gastos, locations = ~sgUF,
color = ~n_gastos, colors = 'Purples'
)
p
tipos_rs <- ceap %>%
group_by(tipoDespesa) %>%
summarise(total = sum(valorLíquido))
tipos_rs %>%
plot_ly(x=~total, y=~tipoDespesa, type="bar")
tipo_rs %>%
ggplot(aes(x=total, y=tipoDespesa)) +
geom_bar()
tipos_rs %>%
ggplot(aes(x=total, y=tipoDespesa)) +
geom_bar()
tipos_rs %>%
ggplot(aes(x=total, y=tipoDespesa)) +
geom_bar(stat = "identidy")
tipos_rs %>%
ggplot(aes(x=total, y=tipoDespesa)) +
geom_bar(stat = "identity")
tipos_rs %>%
ggplot(aes(y=total, x=tipoDespesa)) +
geom_bar(stat = "identity")
tipos_rs %>%
ggplot(aes(y=total, x=tipoDespesa)) +
geom_bar(stat = "identity") +
coord_flip()
tipos_rs %>%
plot_ly(x=~total, y=~tipoDespesa, type="bar")
partidos %>%
plot_ly(x=~sgPartido, y=~n, type = "bar") %>%
layout(title = "Uso da CEAP por partido",
xaxis = list(title = "Partido"),
yaxis = list(title = "Número de usos da cota"))
ceap %>%
plot_ly(y=~tipoDespesa, type="histogram") %>%
layout(margin = list(l = 100))
ceap %>%
plot_ly(y=~tipoDespesa, type="histogram") %>%
layout(margin = list(r = 100))
ceap %>%
plot_ly(y=~tipoDespesa, type="histogram") %>%
layout(margin = list(l = 300))
ceap %>%
plot_ly(y=~tipoDespesa, type="histogram") %>%
layout(margin = list(l = 400))
ceap %>%
plot_ly(y=~tipoDespesa, type="histogram") %>%
layout(margin = list(l = 500))
ceap %>%
plot_ly(y=~tipoDespesa, type="histogram") %>%
layout(margin = list(l = 500),
yaxis = list(title = "Tipo da Despesa"))
tipos_rs %>%
plot_ly(x=~total, y=~tipoDespesa, type="bar") %>%
layout(margin = list(l = 500),
yaxis = list(title = "Tipo da Despesa"))
g <- list(
scope = 'bra',
projection = list(type = 'albers br'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(ceap_estado, locationmode = 'BRA-states') %>%
add_trace(
z = ~n_gastos, locations = ~sgUF,
color = ~n_gastos, colors = 'Purples'
)
p
g <- list(
scope = 'brazil',
projection = list(type = 'albers'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(ceap_estado, locationmode = 'BRA-states') %>%
add_trace(
z = ~n_gastos, locations = ~sgUF,
color = ~n_gastos, colors = 'Purples'
)
p
g <- list(
scope = 'usa',
projection = list(type = 'albers'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(ceap_estado, locationmode = 'BRA-states') %>%
add_trace(
z = ~n_gastos, locations = ~sgUF,
color = ~n_gastos, colors = 'Purples'
)
p
p <- plot_geo(ceap_estado, locationmode = 'USA-states') %>%
add_trace(
z = ~n_gastos, locations = ~sgUF,
color = ~n_gastos, colors = 'Purples'
)
p
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(ceap_estado, locationmode = 'USA-states') %>%
add_trace(
z = ~n_gastos, locations = ~sgUF,
color = ~n_gastos, colors = 'Purples'
)
p
ceap %>%
plot_ly(x=~sgUF, type="histogram")
ceap_estado <- ceap %>%
group_by(sgUF) %>%
summarise(valor_gasto = sum(valorLíquido),
n_gastos = n())
ceap_estado %>%
plot_ly(x=~sgUF, y=~n_gastos)
ceap_estado %>%
plot_ly(x=~sgUF, y=~n_gastos, type='box')
ceap %>%
plot_ly(x=~sgUF, y=~valorLíquido, type='box')
ceap %>%
plot_ly(color=~sgUF, y=~valorLíquido, type="box")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
library(tidyverse)
library(plotly)
library(leaflet)
ceap %>%
plot_ly(color=~sgUF, y=~valorLíquido, type="box")
ceap %>%
plot_ly(color=~sgUF, y=~valorLíquido, type= "box")
estado_rs %>%
plot_ly(x=~sgUF, y=~total, type = "bar")
library(tidyverse)
ceap <- read.csv("dadosCEAP.csv")
ceap <- read.csv("dadosCEAP.csv")
ceap$valorGlosa <- as.numeric(sub(",", ".", ceap$valorGlosa, fixed = TRUE))
ceap_ano <- ceap %>%
mutate(ano = substr(dataEmissao, 1, 4)) %>%
group_by(ano) %>%
summarise(valor = sum(valorLíquido))
View(ceap_ano)
library(plotly)
ceap_ano %>%
plot_ly(x=~ano, y=~valor)
ceap_ano %>%
plot_ly(x=~ano, y=~valor, type="bar")
ceap_mes <- ceap %>%
mutate(mes = substr(dataEmissao, 6, 7)) %>%
group_by(mes) %>%
summarise(valor = sum(valorLíquido))
ceap_mes %>%
plot_ly(x=~mes, y=~valor)
ceap %>%
mutate(mes = substr(dataEmissao, 6, 7)) %>%
plot_ly(x~mes, y=~valorLíquido, type="box")
c1 <- ceap %>%
mutate(mes = substr(dataEmissao, 6, 7))
c1 %>%
plot_ly(x~mes, y=~valorLíquido, type="box")
c1 %>%
filter(!is.na(mes), !is.na(valorLíquido)) %>%
plot_ly(x~mes, y=~valorLíquido, type="box")
c1 %>%
filter(!is.na(mes), !is.na(valorLíquido)) %>%
plot_ly(x=~mes, y=~valorLíquido, type="box")
c1 %>%
plot_ly(x=~mes, y=~valorLíquido, type="box")
c1 %>%
plot_ly(x=~mes, y=~valorLíquido, type="box", boxpoints = FALSE)
c1 %>%
plot_ly(x=~mes, y=~valorLíquido, type="box", boxpoints = 'outliers')
c1 %>%
plot_ly(x=~mes, y=~valorLíquido, type="box", boxpoints = FALSE)
setwd("~/Documentos/ad2/Lab 2 - Votos dos Deputados")
library(caret)
library(caret)
library(tidyverse)
dados_votos <- read.csv("eleicoes2014.csv", encoding = "latin1")
dados_votos <- dados_votos %>%
select(-c(nome, sequencial_candidato, numero_cadidato, cargo))
dados_votos[is.na(dados_votos)] <- 0
dados_votos <- read.csv("eleicoes2014.csv", encoding = "latin1")
dados_votos <- dados_votos %>%
select(-c(nome, sequencial_candidato, numero_cadidato, cargo))
smp_size <- floor(.7*nrow(dados_votos))
set.seed(123)
train_id <- sample(seq_len(nrow(dados_votos)), size = smp_size)
treino <- dados_votos[train_id,]
teste <- dados_votos[-train_id,]
control <- trainControl(method = "cv", number = 5)
lambdaGrid <- expand.grid(lambda = 10^seq(10, -2, length=100))
model.ridge <- train(votos~.,
data = treino,
method = "ridge",
trControl = control,
preProcess = c('scale', 'center', 'nzv'),
tuneGrid = lambdaGrid,
metric = "lambda")
dados_votos[is.na(dados_votos)] <- 0
smp_size <- floor(.7*nrow(dados_votos))
set.seed(123)
train_id <- sample(seq_len(nrow(dados_votos)), size = smp_size)
treino <- dados_votos[train_id,]
teste <- dados_votos[-train_id,]
control <- trainControl(method = "cv", number = 5)
lambdaGrid <- expand.grid(lambda = 10^seq(10, -2, length=100))
model.ridge <- train(votos~.,
data = treino,
method = "ridge",
trControl = control,
preProcess = c('scale', 'center', 'nzv'),
tuneGrid = lambdaGrid,
metric = "lambda")
View(dados_votos)
model.ridge
?trainControl
varImp(model.ridge)
ggplot(varImp(model.ridge))
control <- trainControl(method = "repeatedcv", number = 5, repeats = 10, search = "random")
lambdaGrid <- expand.grid(lambda = 10^seq(10, -2, length=100))
model.ridge <- train(votos~.,
data = treino,
method = "ridge",
trControl = control,
preProcess = c('scale', 'center', 'nzv'),
tuneGrid = lambdaGrid,
metric = "RMSE",
tuneLength = 10)
View(dados_votos)
model.ridge
ggplot(varImp(model.ridge))
ggplot(varImp(model.ridge))
varImp(model.ridge)
